name: Deploy HEF-Backend to AWS EC2

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: hef
      IMAGE_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_INSTANCE_IP: ${{ secrets.EC2_INSTANCE_IP }}
      EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_INSTANCE_IP }}
          username: ec2-user
          key: ${{ env.EC2_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install -y docker aws-cli
            sudo systemctl start docker
            sudo systemctl enable docker

            aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}

            sudo docker pull ${{ steps.login-ecr.outputs.registry }}/hef:latest

            sudo docker stop HEF_BACKEND || true
            sudo docker rm HEF_BACKEND || true

            if [ ! -f /home/ec2-user/hef/.env/.env.production ]; then
              echo ".env.production file is missing."
              exit 1
            fi

            sudo docker run -d \
              -p 3003:3003 \
              --name HEF_BACKEND \
              --env-file /home/ec2-user/hef/.env/.env.production \
              ${{ steps.login-ecr.outputs.registry }}/hef:latest
